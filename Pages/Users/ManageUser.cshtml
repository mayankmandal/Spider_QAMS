@page
@using System.Text.Json
@model Spider_QAMS.Pages.Users.ManageUserModel
@{
    ViewData["Title"] = "Manage Users";
    TempData["NavigationalPageName"] = "Manage User";
}


<div style="display:flex; flex-direction:column; align-items:center; min-height:20vh;">
    <!-- Title and Action Buttons -->
    <div class="row pt-1 mb-3" style="width:100%;">
        <div class="col text-start">
            <h4 class="rb-header">Manage Users</h4>
        </div>
        <div class="col text-end">
            <button asp-page-handler="ExportToExcel" class="btn create-btn" style="background: linear-gradient(to bottom, #ffffff, #e0e0e0); color: #71797E;">
                <i class="fas fa-file-excel"></i> Export to Excel
            </button>
            <a asp-page="/Users/CreateUser" class="btn create-btn" style="background: linear-gradient(to bottom, #ffffff, #e0e0e0); color: #71797E;">
                <i class="fas fa-plus-circle"></i> Create New User
            </a>
        </div>
    </div>

    <!-- Search Filters -->
    <div class="d-flex mb-3 mt-2" style="width: 100%;">
        <label for="searchBy" class="me-2">Search by:</label>
        <select id="searchBy" class="form-select me-2" style="width:200px;">
            <option value="FullName">Full Name</option>
            <option value="EmailID">Email Address</option>
            <option value="PhoneNumber">Phone Number</option>
            <option value="Designation">Designation</option>
            <option value="UserName">Username</option>
        </select>
        <input type="text" id="searchInput" class="form-control me-2" style="width: 300px;" />
        <button type="button" class="btn btn-outline-secondary me-2" id="searchBtn">Search</button>
        <button type="button" class="btn btn-outline-secondary" id="resetBtn">Reset</button>
    </div>

    <!-- jsGrid for Users -->
    <div id="jsGridUsers" style="width:100%;"></div>
</div>


@section scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/plugins/jsgrid/jsgrid.min.js"></script>
    <script asp-append-version="true">
        const usersData = @Html.Raw(JsonSerializer.Serialize(Model.Users));

        $(function () {
            $("#jsGridUsers").jsGrid({
                width: "100%",
                height: "auto",
                inserting: false,
                editing: false,
                sorting: true,
                paging: true,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 5,
                data: usersData,
                controller: {
                    loadData: function (filter) {
                        return $.grep(usersData, function (user) {
                            if (!filter.searchInput) return true;
                            let searchValue = filter.searchInput.toLowerCase();
                            return user[filter.searchBy]?.toString().toLowerCase().includes(searchValue);
                        });
                    }
                },
                fields: [
                    { name: "Designation", title: "Designation", type: "text", width: 50 },
                    {
                        name: "FullName", title: "Full Name", type: "text", width: 100, css: { 'word-wrap': 'break-word' }, filtering: true, sorting: true, itemTemplate: function (value) {
                            return $("<div>").text(value).css({
                                'word-wrap': 'break-word',
                                'white-space': 'normal' // Ensures wrapping within the cell
                            });
                        }
                    },
                    {
                        name: "EmailID", title: "Email", type: "text", width: 100, css: { 'word-wrap': 'break-word' }, filtering: true, sorting: true, itemTemplate: function (value) {
                            return $("<div>").text(value).css({
                                'word-wrap': 'break-word',
                                'white-space': 'normal' // Ensures wrapping within the cell
                            });
                        }
                    },
                    {
                        name: "UserName", title: "Username", type: "text", width: 100, css: { 'word-wrap': 'break-word' }, filtering: true, sorting: true, itemTemplate: function (value) {
                            return $("<div>").text(value).css({
                                'word-wrap': 'break-word',
                                'white-space': 'normal' // Ensures wrapping within the cell
                            });
                        }
                    },
                    { name: "ProfileSiteData.ProfileName", title: "Profile Name", type: "text", width: 80 },
                    { name: "PhoneNumber", title: "Phone Number", type: "text", width: 90 },
                    {
                        name: "IsActive", title: "Is Active", type: "checkbox", sorting: false,
                        itemTemplate: function (value) { return `<input type="checkbox" ${value ? "checked" : ""} disabled>`; }
                    },
                    {
                        name: "IsADUser", title: "Is ADUser", type: "checkbox", sorting: false,
                        itemTemplate: function (value) { return `<input type="checkbox" ${value ? "checked" : ""} disabled>`; }
                    },
                    {
                        title: "Actions",
                        width: 80,
                        align: "center",
                        itemTemplate: function (_, item) {
                            let editButton = $("<a>")
                                .addClass("btn btn-primary btn-sm me-1")
                                .attr("href", `/Users/UpdateUser?userId=${item.UserId}`)
                                .html('<i class="fas fa-edit"></i>');
                            let deleteButton = $("<a>")
                                .addClass("btn btn-danger btn-sm")
                                .attr("href", `/Users/DeleteUser?userId=${item.UserId}`)
                                .html('<i class="fas fa-trash-alt"></i>');
                            return $("<div>").append(editButton).append(deleteButton);
                        }
                    }
                ]
            });

            // Search button event handler
            $('#searchBtn').on('click', function () {
                $("#jsGridUsers").jsGrid("loadData", {
                    searchBy: $('#searchBy').val(),
                    searchInput: $('#searchInput').val()
                });
            });

            // Reset button event handler
            $('#resetBtn').on('click', function () {
                $('#searchInput').val('');
                $("#jsGridUsers").jsGrid("loadData", {});
            });
        });
    </script>
}