@page
@model Spider_QAMS.Pages.ManageRegionsModel
@{
    ViewData["Title"] = "Manage Regions";
    TempData["NavigationalPageName"] = "Manage Region";
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">assignment</i>
                </div>
                <h4 class="card-title">Regions Management</h4>
            </div>
            <div class="card-body">
                <div class="toolbar row d-flex justify-content-between">
                    <div class="d-flex">
                    </div>
                    <button onclick="showCreateForm()" class="btn btn-round btn-warning">
                        <i class="material-icons">
                            add_to_photos
                        </i> Create Region
                    </button>
                </div>
                <div class="material-datatables">
                    <table id="regionsTable" class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                        <thead>
                            <tr>
                                <th>Region Name</th>
                                <th class="text-right">Actions</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>Region Name</th>
                                <th class="text-right">Actions</th>
                            </tr>
                        </tfoot>
                        <tbody>
                            <!-- Data is loaded dynamically via JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<form id="createFormDiv" method="post" asp-page-handler="Create" style="display:none;">
    <div class="card">
        <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
                <i class="material-icons">globe</i>
            </div>
            <h4 class="card-title">Create New Region</h4>
        </div>
        <div class="card-body ">
            <!-- Validation Summary -->
            <div asp-validation-summary="All" class="text-danger fw-bold"></div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="Region.RegionName"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="text" class="form-control" asp-for="Region.RegionName" placeholder="Region Name here...">
                    </div>
                    <span asp-validation-for="Region.RegionName" class="text-danger fw-bold"></span>
                </div>
            </div>

        </div>
        <div class="card-footer ml-auto mr-auto">
            <button type="submit" class="btn btn-round btn-primary">Create Region</button> &nbsp;
            <button type="button" class="btn btn-round btn-secondary" onclick="hideAllForms()">Cancel</button>
        </div>
    </div>
</form>

<form id="editFormDiv" method="post" asp-page-handler="Update" style="display:none;">
    <input type="hidden" asp-for="Region.RegionId" id="editRegionId" />
    <div class="card">
        <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
                <i class="material-icons">globe</i>
            </div>
            <h4 class="card-title">Update Existing Region</h4>
        </div>
        <div class="card-body ">
            <!-- Validation Summary -->
            <div asp-validation-summary="All" class="text-danger fw-bold"></div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="Region.RegionName"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="text" class="form-control" id="editRegionName" asp-for="Region.RegionName" placeholder="Region Name here...">
                    </div>
                    <span asp-validation-for="Region.RegionName" class="text-danger fw-bold"></span>
                </div>
            </div>
        </div>
        <div class="card-footer ml-auto mr-auto">
            <button type="submit" class="btn btn-round btn-success">Update Region</button> &nbsp;
            <button type="button" class="btn btn-round btn-secondary" onclick="hideAllForms()">Cancel</button>
        </div>
    </div>
</form>

<form id="deleteFormDiv" method="post" asp-page-handler="Delete" style="display:none;">
    <input type="hidden" name="RegionId" id="deleteRegionId" />
    <div class="card">
        <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
                <i class="material-icons">globe</i>
            </div>
            <h4 class="card-title">Delete Existing Region</h4>
        </div>
        <div class="card-body ">
            <!-- Validation Summary -->
            <div asp-validation-summary="All" class="text-danger fw-bold"></div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="Region.RegionName"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="text" class="form-control" id="deleteRegionName" asp-for="Region.RegionName" placeholder="Region Name here..." disabled>
                    </div>
                    <span asp-validation-for="Region.RegionName" class="text-danger fw-bold"></span>
                </div>
            </div>

            <div class="row">
                <label class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <p class="text">Are you sure you want to delete region <strong id="deleteRegionPName"></strong>?</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer ml-auto mr-auto">
            <button type="submit" class="btn btn-round btn-danger">Delete Region</button> &nbsp;
            <button type="button" class="btn btn-round btn-secondary" onclick="hideAllForms()">Cancel</button>
        </div>
    </div>
</form>


@section scripts {
    <partial name="_ValidationScriptsPartial" />
    <script asp-append-version="true">
        // Function to show the Create form
        function showCreateForm() {
            hideAllForms();
            $('#createFormDiv').show();
        }

        // Function to show the Edit Form
        function showEditForm(regionId, regionName) {
            hideAllForms();
            $('#editRegionId').val(regionId);
            $('#editRegionName').val(regionName);
            $('#editFormDiv').show();
        }

        // Function to show the Delete form
        function showDeleteForm(regionId, regionName) {
            hideAllForms();
            $('#deleteRegionId').val(regionId);
            $('#deleteRegionName').val(regionName);
            $('#deleteRegionPName').text(regionName);
            $('#deleteFormDiv').show();
        }

        // Function to hide All Forms
        function hideAllForms() {
            $('#createFormDiv, #editFormDiv, #deleteFormDiv').hide();
        }

        $(document).ready(function () {
            // Sample regions data - replace this with the actual data from server
            const regionsData = @Html.Raw(Json.Serialize(Model.Regions));

            // Initialize DataTables
            const table = $('#regionsTable').DataTable({
                data: regionsData,
                columns: [
                    { data: 'regionName' },
                    {
                        data: null,
                        className: "text-right",
                        render: function (data, type, row) {
                            return `<button class="btn btn-success btn-sm editBtn" data-id="${row.regionId}" data-name="${row.regionName}">
                                   <i class="material-icons">drive_file_rename_outline</i>
                                </button>
                                <button class="btn btn-danger btn-sm deleteBtn" data-id="${row.regionId}" data-name="${row.regionName}">
                                    <i class="material-icons">delete_outline</i>
                                </button>`;
                        }
                    }
                ],
                paging: true,
                pagingType: "full_numbers",
                pageLength: 10,
                lengthMenu: [
                    [5, 10, 25, 50, -1], // This controls the number of options shown in the dropdown
                    [5, 10, 25, 50, 'All'] // Text shown next to each option
                ],
                responsive: true,
                language: {
                    search: "Search:",
                    searchPlaceholder: "Enter value..."
                },
                ordering: true,
                autoWidth: true,
                buttons: [
                    {
                        extend: 'copy',
                        title: 'Region Data Copy',
                        filename: `Region_Data_Copy_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'Region Data CSV',
                        filename: `Region_Data_CSV_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    },
                    {
                        extend: 'excel',
                        title: 'Region Data Excel',
                        filename: `Region_Data_Excel_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'Region Data PDF',
                        filename: `Region_Data_PDF_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        },
                        customize: function (doc) {
                            doc.content[1].table.widths = ['*', '*']; // Adjust columns if needed
                            doc.pageSize = 'A4';
                        }
                    },
                    {
                        extend: 'print',
                        title: 'Region Data Print',
                        filename: `Region_Data_Print_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: -1, // Exclude the last column (Actions) from export
                        exportOptions: {
                            columns: ':not(:last-child)'
                        }
                    }
                ],
                dom: `
                        <"row"<"col-sm-3"l><"col-sm-6 text-center"B><"col-sm-3"f>>
                        t
                        <"row"<"col-sm-6"i><"col-sm-6"p>>
                    `,
                noDataContent: "No Regions found.",
                initComplete: function () {
                    // Adjust the dropdown select using jQuery
                    var select = $('#regionsTable_length label select');
                    select.addClass('form-control px-4'); // Add form-control class for styling
                }
            });

            // Action handlers for edit and delete buttons
            $('#regionsTable tbody').on('click', '.editBtn', function () {
                const regionId = $(this).data('id');
                const regionName = $(this).data('name');
                showEditForm(regionId, regionName);  // Custom function to handle editing
            });

            $('#regionsTable tbody').on('click', '.deleteBtn', function () {
                const regionId = $(this).data('id');
                const regionName = $(this).data('name');
                showDeleteForm(regionId, regionName);  // Custom function to handle deletion
            });
        });
    </script>
}