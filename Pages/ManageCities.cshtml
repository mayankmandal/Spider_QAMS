@page
@model Spider_QAMS.Pages.ManageCitiesModel
@{
    ViewData["Title"] = "Manage Cities";
    TempData["NavigationalPageName"] = "Manage Cities";
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header card-header-primary card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">assignment</i>
                </div>
                <h4 class="card-title">Cities Management</h4>
            </div>
            <div class="card-body">
                <div class="toolbar row d-flex justify-content-between">
                    <div class="d-flex">
                    </div>
                    <button onclick="showCreateForm()" class="btn btn-round btn-warning">
                        <i class="material-icons">
                            add_to_photos
                        </i> Create City
                    </button>
                </div>
                <div class="material-datatables">
                    <table id="citiesTable" class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                        <thead>
                            <tr>
                                <th>City Name</th>
                                <th>Region Name</th>
                                <th class="text-right">Actions</th>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <th>City Name</th>
                                <th>Region Name</th>
                                <th class="text-right">Actions</th>
                            </tr>
                        </tfoot>
                        <tbody>
                            <!-- Data is loaded dynamically via JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<form id="createFormDiv" method="post" asp-page-handler="Create" style="display:none;">
    <div class="card">
        <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
                <i class="material-icons">contacts</i>
            </div>
            <h4 class="card-title">Create New City</h4>
        </div>
        <div class="card-body">
            <!-- Validation Summary -->
            <div asp-validation-summary="All" class="text-danger fw-bold"></div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="CityViewModel.CityName"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="text" class="form-control" asp-for="CityViewModel.CityName" placeholder="Region Name">
                    </div>
                    <span asp-validation-for="CityViewModel.CityName" class="text-danger fw-bold"></span>
                </div>
            </div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="CityViewModel.RegionData.RegionId"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <select id="regionSelect" asp-for="CityViewModel.RegionData.RegionId" data-size="7" class="selectpicker" data-style="btn btn-primary btn-round" title="Choose Region" required>
                            <option value="" disabled selected>--Select Region--</option>
                            @foreach (var region in Model.Regions)
                            {
                                <option value="@region.RegionId">@region.RegionName</option>
                            }
                        </select>
                    </div>
                    <span asp-validation-for="CityViewModel.RegionData.RegionId" class="text-danger fw-bold"></span>
                </div>
            </div>
        </div>
        <div class="card-footer ml-auto mr-auto">
            <button type="submit" class="btn btn-round btn-primary">Create City</button> &nbsp;
            <button type="button" class="btn btn-round btn-secondary" onclick="hideAllForms()">Cancel</button>
        </div>
    </div>
</form>

<form id="editFormDiv" method="post" asp-page-handler="Update" style="display:none;">
    <input type="hidden" asp-for="CityViewModel.CityId" id="editCityId" />
    <div class="card">
        <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
                <i class="material-icons">contacts</i>
            </div>
            <h4 class="card-title">Update Existing City</h4>
        </div>
        <div class="card-body ">
            <!-- Validation Summary -->
            <div asp-validation-summary="All" class="text-danger fw-bold"></div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="CityViewModel.CityName"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="text" class="form-control" id="editCityName" asp-for="CityViewModel.CityName" placeholder="Region Name">
                    </div>
                    <span asp-validation-for="CityViewModel.CityName" class="text-danger fw-bold"></span>
                </div>
            </div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="CityViewModel.RegionData.RegionId"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <select id="editRegionId" asp-for="CityViewModel.RegionData.RegionId" class="selectpicker" data-style="btn btn-primary btn-round" title="Choose Region" data-size="7" required>
                            <option value="" disabled selected>--Select Region--</option>
                            @foreach (var region in Model.Regions)
                            {
                                <option value="@region.RegionId">@region.RegionName</option>
                            }
                        </select>
                    </div>
                    <span asp-validation-for="CityViewModel.RegionData.RegionId" class="text-danger fw-bold"></span>
                </div>
            </div>
        </div>
        <div class="card-footer ml-auto mr-auto">
            <button type="submit" class="btn btn-round btn-success">Update City</button> &nbsp;
            <button type="button" class="btn btn-round btn-secondary" onclick="hideAllForms()">Cancel</button>
        </div>
    </div>
</form>

<form id="deleteFormDiv" method="post" asp-page-handler="Delete" style="display:none;">
    <input type="hidden" name="CityId" id="deleteCityId" />
    <div class="card">
        <div class="card-header card-header-rose card-header-icon">
            <div class="card-icon">
                <i class="material-icons">contacts</i>
            </div>
            <h4 class="card-title">Delete Existing City</h4>
        </div>
        <div class="card-body ">
            <!-- Validation Summary -->
            <div asp-validation-summary="All" class="text-danger fw-bold"></div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="CityViewModel.CityName"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <input type="text" class="form-control" id="deleteCityName" asp-for="CityViewModel.CityName" placeholder="City Name" disabled>
                    </div>
                    <span asp-validation-for="CityViewModel.CityName" class="text-danger fw-bold"></span>
                </div>
            </div>

            <div class="row">
                <label class="col-sm-2 col-form-label" asp-for="CityViewModel.RegionData.RegionId"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                        <select id="deleteRegionId" asp-for="CityViewModel.RegionData.RegionId" data-size="7" class="selectpicker" data-style="btn btn-primary btn-round" title="Choose Region" required>
                        </select>
                    </div>
                    <span asp-validation-for="CityViewModel.RegionData.RegionId" class="text-danger fw-bold"></span>
                </div>
            </div>

            <div class="row">
                <label class="col-sm-2 col-form-label"></label>
                <div class="col-sm-10">
                    <div class="form-group">
                    <p class="text">Are you sure you want to delete city <strong id="deleteCityPName"></strong>?</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer ml-auto mr-auto">
            <button type="submit" class="btn btn-round btn-danger">Delete City</button> &nbsp;
            <button type="button" class="btn btn-round btn-secondary" onclick="hideAllForms()">Cancel</button>
        </div>
    </div>
</form>

@section scripts {
    <partial name="_ValidationScriptsPartial" />
    <script asp-append-version="true">
        // Sample regions data - replace this with the actual data from server
        const cities = @Html.Raw(Json.Serialize(Model.Cities));

        // Function to show the Create form
        function showCreateForm() {
            hideAllForms();
            $('#createFormDiv').show();
        }

        // Function to show the Edit Form
        function showEditForm(cityId, cityName, regionId) {
            hideAllForms();
            $('#editCityId').val(cityId);
            $('#editCityName').val(cityName);
            $('#editRegionId').val(regionId); // Set selected region for edit
            $('#editFormDiv').show();
        }

        // Function to show the Delete form
        function showDeleteForm(cityId, cityName, regionId, regionName) {
            hideAllForms();
            $('#deleteCityId').val(cityId);
            $('#deleteCityName').val(cityName);
            $('#deleteCityPName').text(cityName);
            $('#deleteRegionId').empty().append(new Option(regionName, regionId)).prop('disabled selected', true); // Set and disable the dropdown
            $('#deleteFormDiv').show();
        }

        // Function to hide All Forms
        function hideAllForms() {
            $('#createFormDiv, #editFormDiv, #deleteFormDiv').hide();
            clearValidationMessages();
        }

        // Function to clear validation messages and reset form validation state
        function clearValidationMessages() {
            // Clear validation messages and reset validation state for the create form
            var createForm = $('#createCityForm');
            if (createForm.length > 0) {
                createForm.validate().resetForm(); // Clear valdiation errors
                createForm[0].reset(); // Reset form fields
            }

            // Clear validation messages and reset validation state for the edit form
            var editForm = $('#editFormDiv form');
            if (editForm.length > 0) {
                editForm.validate().resetForm();  // Clear validation errors
                editForm[0].reset();  // Reset form fields
            }

            // Clear validation messages and reset validation state for the delete form
            var deleteForm = $('#deleteFormDiv form');
            if (deleteForm.length > 0) {
                deleteForm.validate().resetForm();  // Clear validation errors
                deleteForm[0].reset();  // Reset form fields
            }
        }

        $(document).ready(function () {
            // Initialize DataTables
            const table = $('#citiesTable').DataTable({
                data: cities,
                columns: [
                    { data: 'cityName', title: "City Name" },
                    { data: 'regionData.regionName', title: "Region Name" },
                    {
                        data: null,
                        title: "Actions",
                        className: "text-right",
                        orderable: false,
                        render: function (data, type, row) {
                            return `<button class="btn btn-success btn-sm me-1" onclick="showEditForm(${row.cityId}, '${row.cityName}', ${row.regionData.regionId})">
                                                <i class="material-icons">drive_file_rename_outline</i>
                                            </button>
                                            <button class="btn btn-danger btn-sm" onclick="showDeleteForm(${row.cityId}, '${row.cityName}', ${row.regionData.regionId}, '${row.regionData.regionName}')">
                                                <i class="material-icons">delete_outline</i>
                                            </button>
                                        `;
                        }
                    }
                ],
                paging: true,
                pagingType: "full_numbers",
                pageLength: 10,
                lengthMenu: [
                    [5, 10, 25, 50, -1], // This controls the number of options shown in the dropdown
                    [5, 10, 25, 50, 'All'] // Text shown next to each option
                ],
                responsive: true,
                language: {
                    search: "Search:",
                    searchPlaceholder: "Enter value..."
                },
                ordering: true,
                autoWidth: true,
                buttons: [
                    {
                        extend: 'copy',
                        title: 'City Data Copy',
                        filename: `City_Data_Copy_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    },
                    {
                        extend: 'csv',
                        title: 'City Data CSV',
                        filename: `City_Data_CSV_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    },
                    {
                        extend: 'excel',
                        title: 'City Data Excel',
                        filename: `City_Data_Excel_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    },
                    {
                        extend: 'pdf',
                        title: 'City Data PDF',
                        filename: `City_Data_PDF_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        },
                        customize: function (doc) {
                            doc.content[1].table.widths = ['*', '*']; // Adjust columns if needed
                            doc.pageSize = 'A4';
                        }
                    },
                    {
                        extend: 'print',
                        title: 'City Data Print',
                        filename: `City_Data_Print_${new Date().toISOString().slice(0, 19).replace(/[-T:]/g, '')}`,
                        exportOptions: {
                            columns: ':not(:last-child)' // Exclude last column in export
                        }
                    }
                ],
                columnDefs: [
                    {
                        targets: -1, // Exclude the last column (Actions) from export
                        exportOptions: {
                            columns: ':not(:last-child)'
                        }
                    }
                ],
                dom: `
                        <"row"<"col-sm-3"l><"col-sm-6 text-center"B><"col-sm-3"f>>
                        t
                        <"row"<"col-sm-6"i><"col-sm-6"p>>
                    `,
                noDataContent: "No Cities found.",
                initComplete: function () {
                    // Adjust the dropdown select using jQuery
                    var select = $('#citiesTable_length label select');
                    select.addClass('form-control px-4'); // Add form-control class for styling
                }
            });
        });
    </script>
}
